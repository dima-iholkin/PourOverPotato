import{p as A,e as C,g as _,o as m,C as f,R as c,d as E,b as V,k as v,f as S,j as R}from"./dateHelpers.DtGJLfnR.js";const N=[{name:"Rwanda Mabanza",description:"Washed process. Dark plum, dark cherry notes. (demo)"},{name:"Colombia El Refugio",description:"Natural process. Berry notes. (demo)"},{name:"Ethiopia Yirgacheffe",description:"Washed process. Grassy notes. (demo)"}];function j(e){return[{coffeeBeansId:e,recipeTarget:"17g + 270g. 5m boil.",recipeResult:"2m10s + 15s drip.",outWeight:230,favorite:!1,rating:3.5,recipeThoughts:"Can be better.",timestamp:new Date(2023,12,20)},{coffeeBeansId:e,recipeTarget:"18g + 290g. 5m boil.",recipeResult:"2m10s + 15s drip.",outWeight:235,favorite:!1,rating:4,recipeThoughts:"It's better.",timestamp:new Date(2023,12,23)},{coffeeBeansId:e,recipeTarget:"20g + 300g. 5m boil.",recipeResult:"2m30s + 5s drip.",outWeight:240,favorite:!0,rating:4.5,recipeThoughts:"It's great.",timestamp:new Date(2023,12,26)}]}function x(e,a,i){const t=[];for(const o of e){const r=a.find(n=>n.name.toLowerCase()===o.name.toLowerCase());if(r){i.set(o.id,r.id);continue}else t.push(o)}return t}function W(e,a){const i=[];for(const t of e)a.find(r=>r.timestamp===t.timestamp.getTime()&&r.outWeight===t.outWeight&&r.rating===t.rating&&r.recipeTarget===t.recipeTarget&&r.recipeResult===t.recipeResult&&r.recipeThoughts===t.recipeThoughts&&r.coffeeBeansId===t.coffeeBeansId)||i.push(t);return i}function d(e){return e==null}function G(e){return e!=null}function F(e){return!(d(e)||Number.isInteger(e)===!1||e<0)}function O(e){return d(e)||typeof e!="boolean"?!1:e}function M(e,a){if(d(e))return alert('"dbVersion" property not found in the file. Import aborted.'),"ImportFailed";if(Number.isInteger(e)===!1)return alert('"dbVersion" property must be an integer. Import aborted.'),"ImportFailed";const i=e;return i<=0?(alert(`The file's "dbVersion" must be higher than 0. Import aborted.`),"ImportFailed"):i>a?(alert(`The file's "dbVersion" = ${e} is higher than the app's current "dbVersion" = ${a}.
       Import aborted. Try refreshing the page and importing again. If the problem persists, please contact the
       developer.`),"ImportFailed"):i}function y(e){return d(e)||Number.isFinite(e)===!1||e<0?0:e}function b(e){return d(e)||typeof e!="string"?"":e}function q(e){if(d(e)||typeof e!="string")return"ImportFailed";const a=A(e);return a.toString()==="Invalid Date"?"ImportFailed":a}function J(e,a){if(d(e))return"ImportFailed";const i=e;if(F(i.id)===!1)return"ImportFailed";const o=i.id,r=b(i.name);if(C.hasValidName({name:r})==="ValidationFailed_NameMustBeAtLeast3CharsLong")return alert(`Imported CoffeeBeans name must be at least 3 characters long. Faulty item:
`+JSON.stringify(i,null,2)),"ImportFailed";const n=b(i.description),p={id:o,name:r,description:n};return new C(p)}function k(e,a){if(d(e)||Array.isArray(e)===!1)return alert('"coffeeBeans" array not found in the file.'),"ImportFailed";const i=e,t=[];for(const o of i){const r=J(o);if(r==="ImportFailed")return"ImportFailed";t.push(r)}return t}function L(e,a,i){if(d(e))return"ImportFailed";const t=e;if(F(t.id)===!1)return"ImportFailed";const r=t.id,n=b(t.recipeTarget),p=b(t.recipeResult),l=b(t.recipeThoughts),s=y(t.outWeight),h=y(t.rating),g=O(t.favorite),I=q(t.timestamp);if(I==="ImportFailed"||F(t.coffeeBeansId)===!1)return"ImportFailed";if(a.has(t.coffeeBeansId)===!1){const T=`Import aborted because of an internal error. Unable to match the "CoffeeBeansId" from Recipe
       ${JSON.stringify(t)}. Please inform the developer.`;return console.error(T),"ImportFailed"}const u=a.get(t.coffeeBeansId),B={id:r,recipeTarget:n,recipeResult:p,recipeThoughts:l,outWeight:s,rating:h,favorite:g,timestamp:I,coffeeBeansId:u};return new _(B)}function P(e,a,i){if(d(e)||Array.isArray(e)===!1)return alert('"recipes" array not found in the file.'),"ImportFailed";const t=[];for(const o of e){const r=L(o,a);if(r==="ImportFailed")return"ImportFailed";t.push(r)}return t}async function U(){const a=await(await m()).transaction([f,c],"readwrite"),t=(await a.objectStore(f).getAll()).filter(o=>o.softDeleted===!0);for(const o of t){const r=await a.objectStore(c).index(E).getAll(o.id);for(const n of r)await a.objectStore(c).delete(n.id);await a.objectStore(f).delete(o.id)}await a.done}async function $(){const a=await(await m()).transaction(c,"readwrite").objectStore(c),t=(await a.getAll()).filter(o=>o.softDeleted===!0);for(const o of t)await a.delete(o.id);await a.transaction.done}async function X(){const a=await(await m()).transaction([f,c],"readwrite");await a.objectStore(c).clear(),await a.objectStore(f).clear(),await a.done}async function Y(){const a=await(await m()).transaction([f,c],"readonly"),i=await a.objectStore(f).getAll(),t=await a.objectStore(c).getAll(),o=a.db.version;await a.done;const r=i.filter(s=>s.softDeleted===void 0||s.softDeleted===!1).map(s=>new V(s).toCoffeeBeans()),n=t.filter(s=>s.softDeleted===void 0||s.softDeleted===!1).map(s=>new v(s).toRecipe()),l=JSON.stringify({dbVersion:o,coffeeBeans:r,recipes:n});return new Blob([l],{type:"application/json"})}async function H(){const a=await(await m()).transaction([f,c],"readwrite");for(const i of N){const t=new S(i);let o;try{o=await a.objectStore(f).add(t)}catch(n){return a.abort(),console.error(n),"TransactionAborted"}const r=j(o);for(const n of r){const p=new R(n);await a.objectStore(c).add(p)}}await a.done}async function K(e){const a=JSON.parse(await e.text()),t=await(await m()).transaction([f,c],"readwrite");if(M(a.dbVersion,t.db.version)==="ImportFailed")return await t.abort(),"ImportFailed";const r=new Map,n=k(a.coffeeBeans);if(n==="ImportFailed")return await t.abort(),"ImportFailed";const p=await t.objectStore(f).getAll(),l=x(n,p,r);let s=0;for(const u of l){const B=new S(u),D=await t.objectStore(f).add(B);r.set(u.id,D),s++}const h=await t.objectStore(c).getAll(),g=P(a.recipes,r);if(g==="ImportFailed")return await t.abort(),"ImportFailed";const I=W(g,h);let w=0;for(const u of I)await t.objectStore(c).add(new R(u)),w++;return await t.done,{coffeeBeansCount:s,recipesCount:w}}async function Q(){await $(),await U()}export{K as a,G as b,X as d,Y as e,H as f,d as i,Q as v};
